NETWORK LAYER SIMULATOR

This is a python based network later simulator which supports host to host delivery, distance vector and link state routing, ICMP error messages and reliable connection-less port to port delivery for developing applications.

Current Applications:

Trace Route


==Authors==

Abhinav Gupta (120050029)
Anant Gupta (120050086)
Bijoy Singh (120050087)

==Requirements==

python3
tkinter package for python3

==Usage==

The package to be imported is named NetworksProject

Here's some sample code to walk you through the usage.


from NetworksProject import *  # Import everything

sim = Simulator.Simulator()  # Create a simulator object

sim.set_routing_protocol(("Distance Vector", False, False))  #  Set routing protocol, with options for split horizon and poison reverse
sim.add_node("n1", (1, 1), "1.1.1.0/24")  #  Add a router node. Arguments are name of the node, posision and ip prefix handled
sim.add_node("n2", (3, 1), "2.2.2.0/24")  
sim.add_node("n3", (5, 1), "3.3.3.0/24")
sim.add_connection("n1", "n2", 1)  #  Add a connection between two nodes with some cost
sim.add_connection("n2", "n3", 1)
h = sim.add_host("1.1.1.1", "n1", (2, 2))  #  Add a host to a particular node along with it's position
sim.add_host("3.3.3.3", "n3", (5, 3)) 

packet = Packet.Packet("Host", "Host", "1.1.1.1", "3.3.3.3", "1.1.1.1", "n1", "UDP", 64, 1, "blah")  #  Create a new packet with arguments as follows
                                                                                                     #  src_type, dst_type, src, dst, link_src, link_dst, protocol, ttl, cost, data
sim.step()  #  Step the simulation
sim.put_packet(packet)  #  Send a packet
tr = TraceRoute.TraceRoute(h, "TraceRoute")  #  Create a TraceRoute application on host h. Name the application TraceRoute
tr.trace("3.3.3.3")  #  Trace path to a certain host
sim.update_connection("n2", "n3", float("+inf"))  #  Update the cost of the connection. A cost higher than routing protocol's infinity value breaks the connection.

gui = SimulatorPlotter.Gui(sim)  #  Create a GUI object
gui.start()  #  Start GUI


You can modify parameters and view details via GUI as well.

